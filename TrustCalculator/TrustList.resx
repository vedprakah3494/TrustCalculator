<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAHG0617eWyIKkFVIg2QG6Ct0QaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADjyPTyqQVUiDZAbIK3RBoAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAPjJ0j0iog3QGwVSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD5SdFRWgN0FVogAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAnTqqEFbog0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA2AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAyeH23+oNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAk0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnm
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAABJ4+0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXroAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAB5gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaddQAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ALr0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFuktAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAnhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AB6gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHnAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAKAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABfAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA8wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAf/Z
</value>
  </data>
</root>